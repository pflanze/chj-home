#!/bin/bash

set -euo pipefail
IFS=

if [ "$(readlink -f .)" != "$(readlink -f ~)" ]; then
    echo "$0: must be run from home dir. Terminating."
    exit 1
fi


if [ -e .chj-home/init-done ]; then
    echo "$0 was already run before; if you want to force re-running it, please run 'rm .chj-home/init-done' first."
    exit 0
fi

# Fix perms (make private):
for d in  .links2 .vnc; do
    if [ -e "$d" ]; then
	chmod go-rwx "$d"
    fi
done

# More fix perms (make group private):
for d in . Pictures/ Documents/ Downloads/ Desktop/ Music/ Templates/ Videos/; do
    if [ -e "$d" ]; then
	chmod o-rwx "$d"
    fi
done

for file in .xscreensaver .gdbinit; do
    if [ -e "$file" ]; then
        echo "File $file already exists, not touching it."
    else
        cp ".chj-home/$file" .
    fi
done

cancel() {
    echo "$0: cancelled due to missing answer."
    exit 1
}

set_fn_email() {
    local fullname
    local email
    fullname=$1
    email=$2
    echo "$fullname" > .chj-home_fullname
    echo "$email" > .chj-home_email
}

if read -e -p "Please enter your email address (either bare or with full name): " email; then
    if bareemail=$(printf '%s' "$email" | perl -wne 'm{<([^<>]+)>} or exit 1; print $1'); then
        if fullname=$(printf '%s' "$email" | perl -wne 'm{^(.*?)\s*<[^<>]+>\s*\z} or exit 1; print $1'); then
            set_fn_email "$fullname" "$bareemail"
            # and forever ugly imperative code:
            email=$bareemail
        else
            echo "invalid mail address with full name"
        fi
    else
        if read -e -p "Please enter your full name: " fullname; then
            set_fn_email "$fullname" "$email"
        else
            cancel
        fi
    fi
else
    cancel
fi

if [ -e .bash_profile_local ]; then
    /opt/chj/bin/mvnumber .bash_profile_local
fi
cat <<'EOF' > .bash_profile_local
export EDITOR=e
export BROWSER="firefox --new-window"
export EMAIL=$(cat ~/.chj-home_email)
export LANG=en_GB.UTF-8
EOF

if [ -e .gitconfig ]; then
    /opt/chj/bin/mvnumber .gitconfig
fi
cat <<EOF > .gitconfig
[user]
	email = $email
	name = $fullname

[diff "cj"]
	command = _cj-git-tkdiff

[merge]
	conflictstyle = diff3
	#renameLimit = 2000

[core]
	excludesfile = ~/.gitignore_global

[advice]
        waitingForEditor = false

#[gpg]
#	program = gpg+scrypt

#[push]
#	default = simple
# old git can*not* deal with this

[pull]
        rebase = false
EOF

set +eu
set -x

/opt/chj/chjize/bin/chj-checkout _ignored_ https://github.com/pflanze/chj-emacs .chj-emacs '^v(\d+)$'

ln -s .chj-emacs/.emacs
ln -s .chj-emacs/.emacs.d
ln -s .chj-emacs/bin/* bin || true


if [ -e ~/.lesskey ]; then
    lesskey
fi

(
    umask 077
    mkdir -p tmp .ssh DROP scratch bin
)
(
    set -eu
    cd scratch
    if /opt/chj/bin/cj-git-init; then
	echo no-user-group >> .METADATA-v2.options
	echo HEUTE >> .METADATA-v2.ignore
	touch .git/scoma-no-push
    fi
)

chmod a+wxt,g+s DROP
touch .ssh/authorized_keys
chmod go-w .ssh/authorized_keys
touch .chj-home/init-done

set +x

echo "NOTE: Your answers have been written to .chj-home_fullname, .chj-home_email,"
echo "      and the files .bash_profile_local and .gitconfig have been generated."
echo "NOTE: Run 'cd .chj-emacs && make' if you want to use the full set of emacs"
echo "      functionality now."

